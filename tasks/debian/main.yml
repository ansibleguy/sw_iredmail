---

- name: iRedMail | Debian | Setting hostname
  ansible.builtin.import_tasks: hostname.yml
  when: >
    ansible_virtualization_role is undefined or
    ansible_virtualization_role != 'guest' or
    'docker' not in ansible_virtualization_tech_guest

- name: iRedMail | Debian | Setting hostname in container
  ansible.builtin.import_tasks: hostname_container.yml
  when:
    - ansible_virtualization_role is defined
    - ansible_virtualization_role == 'guest'
    - "'docker' in ansible_virtualization_tech_guest"

- name: iRedMail | Debian | Creating directories
  ansible.builtin.file:
    state: directory
    path: "{{ IRM_HC.path.scripts }}"
    mode: 0755

- name: iRedMail | Debian | Setting up MariaDB instance
  ansible.builtin.include_role:
    name: ansibleguy.infra_mariadb
  vars:
    mariadb:
      instances:
        iredmail: "{{ IRM_MARIADB_INSTANCE }}"
  when: IRM_CONFIG.manage.database
  tags: database

- name: iRedMail | Debian | Checking if mailserver is initialized
  ansible.builtin.stat:
    path: "{{ IRM_CONFIG.config.path_storage }}/vmail1"
  register: irm_initialized

- name: iRedMail | Debian | Running installation tasks
  ansible.builtin.import_tasks: install.yml
  when: not irm_initialized.stat.exists
  vars:
    irm_setup_base: "{{ IRM_HC.path.setup }}/iRedMail-{{ IRM_CONFIG.version }}"

- name: iRedMail | Debian | Copying useful scripts
  ansible.builtin.template:
    src: "{{ item }}"
    dest: "{{ IRM_HC.path.scripts }}/"
    owner: 'root'
    group: 'root'
    mode: 0750
  with_fileglob: "templates/usr/local/sbin/iredmail/*"

- name: iRedMail | Debian | Removing default Nginx sites
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - '/etc/nginx/sites-enabled/00-default-ssl.conf'
    - '/etc/nginx/sites-enabled/00-default.conf'

- name: iRedMail | Debian | Configuring Nginx webserver
  ansible.builtin.include_role:
    name: ansibleguy.infra_nginx
  vars:
    nginx:
      sites:
        iredmail: "{{ IRM_NGINX }}"
  when: IRM_CONFIG.manage.webserver
  tags: webserver

- name: iRedMail | Debian | Checking if Nginx is running
  ansible.builtin.shell: |
    set -o pipefail
    /usr/bin/netstat -tulpn | grep -q {{ IRM_NGINX.port_plain }}
  args:
    executable: '/bin/bash'
  changed_when: false

- name: iRedMail | Debian | Backing-up current certificates
  ansible.builtin.copy:
    src: "{{ item }}"
    remote_src: true
    dest: '/var/backups/'
    mode: 0640
  loop:
    - "{{ IRM_HC.certificate.iredmail.chain }}"
    - "{{ IRM_HC.certificate.iredmail.key }}"

- name: iRedMail | Debian | Linking cert for mail services
  ansible.builtin.file:
    state: link
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: 0640
    owner: 'root'
    group: 'root'
    follow: true
    force: true
  loop:
    - {'dst': "{{ IRM_HC.certificate.iredmail.chain }}",
       'src': "{{ src_path }}/{{ chain }}"}
    - {'dst': "{{ IRM_HC.certificate.iredmail.key }}",
       'src': "{{ src_path }}/{{ key }}"}
  vars:
    src_path: "{{ IRM_HC.certificate.path[IRM_CONFIG.nginx.ssl.mode] }}"
    chain: "{{ IRM_HC.certificate.chain[IRM_CONFIG.nginx.ssl.mode] }}"
    key: "{{ IRM_HC.certificate.key[IRM_CONFIG.nginx.ssl.mode] }}"
  register: irm_mail_cert

- name: iRedMail | Debian | Restarting services to use new certificate
  ansible.builtin.systemd:
    name: "{{ item }}"
    state: restarted
  loop:
    - 'postfix.service'
    - 'postfix@-.service'
    - 'dovecot.service'
    - 'nginx.service'
    - 'mariadb@iredmail.service'
  when: >
    irm_mail_cert.changed or
    (IRM_CONFIG.nginx.ssl.mode == 'letsencrypt' and
    le_changed is defined and
    le_changed.changed)
