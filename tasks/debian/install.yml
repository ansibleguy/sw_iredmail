---

- name: iRedMail | Debian | Install | Creating directories
  ansible.builtin.file:
    state: directory
    path: "{{ item }}"
    mode: 0755
  loop:
    - "{{ IRM_HC.path.setup }}"
    - "{{ IRM_HC.path.setup_log }}"
    - "{{ IRM_HC.path.clamav }}"
    - "{{ IRM_CONFIG.config.path_storage }}"

- name: iRedMail | Debian | Install | Checking if NFTables service is enabled
  ansible.builtin.systemd:
    name: 'nftables.service'
    enabled: true
  check_mode: true
  register: irm_nftables_enabled
  ignore_errors: true

# if clamav-freshclam.service isn't able to pull updates initially the service won't start at all..
- name: iRedMail | Debian | Install | Downloading & unpacking ClamAV initial ruleset
  ansible.builtin.unarchive:
    src: "{{ IRM_HC.download_url_clamav }}"
    dest: "{{ IRM_HC.path.clamav }}/"
    remote_src: yes
  ignore_errors: true

- name: iRedMail | Debian | Install | Downloading & unpacking code
  ansible.builtin.unarchive:
    src: "{{ IRM_HC.download_url }}/{{ IRM_CONFIG.version }}.tar.gz"
    dest: "{{ IRM_HC.path.setup }}/"
    remote_src: yes

- name: iRedMail | Debian | Install | Pushing configuration
  ansible.builtin.import_tasks: config.yml

- name: iRedMail | Debian | Install | Running installation script (this can take some time)
  ansible.builtin.shell:
    cmd: '/bin/bash iRedMail.sh |
    tee -a {{ IRM_HC.path.setup_log }}/install_stdout.log'
  args:
    chdir: "{{ irm_setup_base }}"
  environment:
    AUTO_INSTALL_WITHOUT_CONFIRM: 'YES'
    AUTO_USE_EXISTING_CONFIG_FILE: 'YES'
  timeout: "{{ IRM_HC.install_timeout }}"
  register: irm_install
  ignore_errors: true
  failed_when:
    - "'<< ERROR >>' in irm_install.stdout"
  changed_when:
    - "'< SKIP > Function: mysql_setup' not in irm_install.stdout"
    - "'< SKIP > Function: postfix_setup' not in irm_install.stdout"
    - "'< SKIP > Function: dovecot_setup' not in irm_install.stdout"

- name: iRedMail | Debian | Install | Saving logs
  ansible.builtin.copy:
    src: "{{ irm_setup_base }}/{{ item }}"
    dest: "{{ IRM_HC.path.setup_log }}/"
    remote_src: yes
    mode: 0640
  loop:
    - 'iRedMail.tips'
    - 'runtime/install.status'
    - 'runtime/install.log'
    - 'runtime/pip3.log'
    - 'runtime/pkg.install.log'
  ignore_errors: true
  when: not ansible_check_mode

- name: iRedMail | Debian | Install | Saving sql scripts
  ansible.builtin.copy:
    src: "{{ irm_setup_base }}/{{ item }}"
    dest: "{{ IRM_HC.path.setup_log }}/"
    remote_src: yes
    mode: 0640
  loop:
    - 'runtime/init_vmail_db.sql'
    - 'runtime/iredmail.sql'
    - 'runtime/add_first_domain_and_user.sql'
  ignore_errors: true
  when: not ansible_check_mode

- name: iRedMail | Debian | Install | Handling error
  ansible.builtin.import_tasks: install_error.yml
  when: not ansible_check_mode

- name: iRedMail | Debian | Install | Removing packages
  ansible.builtin.apt:
    name: "{{ IRM_HC.packages.absent }}"
    state: absent

- name: iRedMail | Debian | Install | Running post-install tasks
  ansible.builtin.import_tasks: install_post.yml
  when: irm_install.changed
